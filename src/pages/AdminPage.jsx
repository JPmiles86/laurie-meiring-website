import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import BlogEditor from '../components/BlogEditor';
import AIWritingAssistant from '../components/AIWritingAssistant';
import { motion, AnimatePresence } from 'framer-motion';

function AdminPage({ isMobile }) {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [activeView, setActiveView] = useState('editor'); // 'editor' or 'ai'
  const [aiGeneratedContent, setAiGeneratedContent] = useState(null);
  const navigate = useNavigate();

  // Check if already authenticated
  useEffect(() => {
    const auth = sessionStorage.getItem('blogAdminAuth');
    if (auth === 'authenticated') {
      setIsAuthenticated(true);
    }
  }, []);

  const handleLogin = (e) => {
    e.preventDefault();
    // Simple password check - in production, this should be more secure
    if (password === 'lauriepickleball2024') {
      setIsAuthenticated(true);
      sessionStorage.setItem('blogAdminAuth', 'authenticated');
      setError('');
    } else {
      setError('Incorrect password');
    }
  };

  const handleLogout = () => {
    sessionStorage.removeItem('blogAdminAuth');
    setIsAuthenticated(false);
    navigate('/');
  };

  // Handle content generated by AI
  const handleAIContentGenerated = (content) => {
    setAiGeneratedContent(content);
    setActiveView('editor'); // Switch to editor view
  };

  if (!isAuthenticated) {
    return (
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        style={{
          minHeight: '100vh',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          padding: '20px',
          backgroundColor: 'var(--background-color)'
        }}
      >
        <div style={{
          maxWidth: '400px',
          width: '100%',
          backgroundColor: 'white',
          padding: '40px',
          borderRadius: '12px',
          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'
        }}>
          <h2 style={{
            fontSize: '2rem',
            marginBottom: '30px',
            color: 'var(--primary-color)',
            textAlign: 'center'
          }}>
            Blog Admin Login
          </h2>
          
          <form onSubmit={handleLogin}>
            <div style={{ marginBottom: '20px' }}>
              <label style={{
                display: 'block',
                marginBottom: '8px',
                color: 'var(--text-color)',
                fontSize: '1rem'
              }}>
                Password
              </label>
              <input
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                style={{
                  width: '100%',
                  padding: '12px',
                  fontSize: '1rem',
                  border: '1px solid var(--border-color)',
                  borderRadius: '8px',
                  outline: 'none'
                }}
                placeholder="Enter admin password"
                autoFocus
              />
            </div>
            
            {error && (
              <div style={{
                color: 'red',
                marginBottom: '20px',
                fontSize: '0.9rem'
              }}>
                {error}
              </div>
            )}
            
            <button
              type="submit"
              style={{
                width: '100%',
                padding: '12px',
                backgroundColor: 'var(--primary-color)',
                color: 'white',
                border: 'none',
                borderRadius: '8px',
                fontSize: '1.1rem',
                cursor: 'pointer'
              }}
            >
              Login
            </button>
          </form>
        </div>
      </motion.div>
    );
  }

  return (
    <div style={{
      minHeight: '100vh',
      backgroundColor: 'var(--background-color)'
    }}>
      <div style={{
        backgroundColor: 'white',
        borderBottom: '1px solid var(--border-color)',
        padding: '20px'
      }}>
        <div style={{
          maxWidth: '1200px',
          margin: '0 auto'
        }}>
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginBottom: '20px'
          }}>
            <h1 style={{
              fontSize: '2rem',
              color: 'var(--primary-color)',
              margin: 0
            }}>
              Blog Admin Panel
            </h1>
            <button
              onClick={handleLogout}
              style={{
                padding: '8px 20px',
                backgroundColor: 'var(--secondary-color)',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                cursor: 'pointer'
              }}
            >
              Logout
            </button>
          </div>
          
          {/* Navigation Tabs */}
          <div style={{
            display: 'flex',
            gap: '10px',
            borderTop: '1px solid var(--border-color)',
            paddingTop: '15px'
          }}>
            <button
              onClick={() => setActiveView('editor')}
              style={{
                padding: '10px 20px',
                backgroundColor: activeView === 'editor' ? 'var(--primary-color)' : 'transparent',
                color: activeView === 'editor' ? 'white' : 'var(--text-color)',
                border: activeView === 'editor' ? 'none' : '1px solid var(--border-color)',
                borderRadius: '6px',
                cursor: 'pointer',
                transition: 'all 0.3s ease',
                fontSize: '1rem',
                fontWeight: activeView === 'editor' ? 'bold' : 'normal'
              }}
            >
              Blog Editor
            </button>
            <button
              onClick={() => setActiveView('ai')}
              style={{
                padding: '10px 20px',
                backgroundColor: activeView === 'ai' ? 'var(--primary-color)' : 'transparent',
                color: activeView === 'ai' ? 'white' : 'var(--text-color)',
                border: activeView === 'ai' ? 'none' : '1px solid var(--border-color)',
                borderRadius: '6px',
                cursor: 'pointer',
                transition: 'all 0.3s ease',
                fontSize: '1rem',
                fontWeight: activeView === 'ai' ? 'bold' : 'normal'
              }}
            >
              AI Assistant
            </button>
          </div>
        </div>
      </div>
      
      {/* Content Area with Animation */}
      <AnimatePresence mode="wait">
        {activeView === 'editor' ? (
          <motion.div
            key="editor"
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            transition={{ duration: 0.3 }}
          >
            <BlogEditor 
              isMobile={isMobile} 
              initialContent={aiGeneratedContent}
              onContentUsed={() => setAiGeneratedContent(null)}
            />
          </motion.div>
        ) : (
          <motion.div
            key="ai"
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            transition={{ duration: 0.3 }}
          >
            <AIWritingAssistant 
              onEditBlog={handleAIContentGenerated}
            />
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}

export default AdminPage;